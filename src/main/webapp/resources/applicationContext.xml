<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
         http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd ">

    <!-- 读取配置文件 -->
    <context:property-placeholder location="classpath:*.properties"/>

    <!-- dateSource -->
    <bean name="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
        <property name="driverClassName" value="${jdbc.driver}" />
        <property name="url" value="${jdbc.url}" />
        <property name="username" value="${jdbc.username}" />
        <property name="password" value="${jdbc.password}" />
    </bean>

    <!-- sqlSessionFactory -->
    <bean name="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!-- 注入数据源 -->
        <property name="dataSource" ref="dataSource"></property>
        <!-- 别名 -->
        <property name="typeAliasesPackage" value="com.jonyuan.pojo"></property>
        <!-- 分页选择 -->
        <property name="plugins">
            <list>
                <bean class="com.github.pagehelper.PageHelper">
                    <property name="properties">
                        <props>
                            <prop key="dialect">mysql</prop>
                        </props>
                    </property>
                </bean>
            </list>
        </property>
    </bean>

    <!-- Mapper代理对象 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!-- 指定mapper接口的包名 -->
        <property name="basePackage" value="com.jobyuan.mapper"></property>

        <!-- 错误的配置方式 :MapperScannerConfigurer和contextScannerConfigurer加载顺序有关-->
        <!-- <property name="sqlSessionFactory" ref="sqlSessionFactory"></property> -->
        <!-- 正确的配置方式：可以不配置 -->
        <!--<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>-->
    </bean>

    <!-- Service bean的组件扫描 -->
    <context:component-scan base-package="com.jobyuan"></context:component-scan>

    <!-- 配置事务管理器 -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <!-- 注入datasource -->
        <property name="dataSource" ref="dataSource"></property>
    </bean>

    <!--注入 事务管理器  这个注解驱动 告诉 spring 注解驱动 具体上网搜索  -->
    <tx:annotation-driven  transaction-manager="transactionManager"/>

    <!-- 配置三大组件之试图解析器 -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/system/html/"></property>
        <property name="suffix" value=".jsp"></property>
    </bean>

    <!-- 配置三大组件处理器映射器和处理器适配器 -->
    <mvc:annotation-driven />

    <!-- 当DispatcherServlet配置为/来拦截请求的时候，需要配置静态资源的访问映射 -->
    <mvc:default-servlet-handler />
</beans>