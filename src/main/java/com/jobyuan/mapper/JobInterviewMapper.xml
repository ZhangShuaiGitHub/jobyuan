<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jobyuan.mapper.JobInterviewMapper" >
  <resultMap id="BaseResultMap" type="com.jobyuan.pojo.JobInterview" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="image" property="image" jdbcType="VARCHAR" />
    <result column="sign" property="sign" jdbcType="INTEGER" />
    <result column="level" property="level" jdbcType="INTEGER" />
    <result column="createtime" property="createtime" jdbcType="TIMESTAMP" />
    <result column="updatetime" property="updatetime" jdbcType="TIMESTAMP" />
    <result column="is_close" property="isClose" jdbcType="INTEGER" />
    <result column="createname" property="createname" jdbcType="VARCHAR" />
    <result column="classif" property="classif" jdbcType="INTEGER" />
    <result column="useful" property="useful" jdbcType="INTEGER" />
    <result column="useless" property="useless" jdbcType="INTEGER" />
    <result column="reserve1" property="reserve1" jdbcType="VARCHAR" />
    <result column="reserve2" property="reserve2" jdbcType="VARCHAR" />
    <result column="reserve3" property="reserve3" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.jobyuan.pojo.JobInterview" extends="BaseResultMap" >
    <result column="content" property="content" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, name, image, sign, level, createtime, updatetime, is_close, createname, classif, 
    useful, useless, reserve1, reserve2, reserve3
  </sql>
  <sql id="Blob_Column_List" >
    content
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.jobyuan.pojo.JobInterviewExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from job_interview
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.jobyuan.pojo.JobInterviewExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from job_interview
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from job_interview
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from job_interview
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.jobyuan.pojo.JobInterviewExample" >
    delete from job_interview
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.jobyuan.pojo.JobInterview" >
    insert into job_interview (id, name, image, 
      sign, level, createtime, 
      updatetime, is_close, createname, 
      classif, useful, useless, 
      reserve1, reserve2, reserve3, 
      content)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{image,jdbcType=VARCHAR}, 
      #{sign,jdbcType=INTEGER}, #{level,jdbcType=INTEGER}, #{createtime,jdbcType=TIMESTAMP}, 
      #{updatetime,jdbcType=TIMESTAMP}, #{isClose,jdbcType=INTEGER}, #{createname,jdbcType=VARCHAR}, 
      #{classif,jdbcType=INTEGER}, #{useful,jdbcType=INTEGER}, #{useless,jdbcType=INTEGER}, 
      #{reserve1,jdbcType=VARCHAR}, #{reserve2,jdbcType=VARCHAR}, #{reserve3,jdbcType=VARCHAR}, 
      #{content,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.jobyuan.pojo.JobInterview" >
    insert into job_interview
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="image != null" >
        image,
      </if>
      <if test="sign != null" >
        sign,
      </if>
      <if test="level != null" >
        level,
      </if>
      <if test="createtime != null" >
        createtime,
      </if>
      <if test="updatetime != null" >
        updatetime,
      </if>
      <if test="isClose != null" >
        is_close,
      </if>
      <if test="createname != null" >
        createname,
      </if>
      <if test="classif != null" >
        classif,
      </if>
      <if test="useful != null" >
        useful,
      </if>
      <if test="useless != null" >
        useless,
      </if>
      <if test="reserve1 != null" >
        reserve1,
      </if>
      <if test="reserve2 != null" >
        reserve2,
      </if>
      <if test="reserve3 != null" >
        reserve3,
      </if>
      <if test="content != null" >
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="image != null" >
        #{image,jdbcType=VARCHAR},
      </if>
      <if test="sign != null" >
        #{sign,jdbcType=INTEGER},
      </if>
      <if test="level != null" >
        #{level,jdbcType=INTEGER},
      </if>
      <if test="createtime != null" >
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatetime != null" >
        #{updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="isClose != null" >
        #{isClose,jdbcType=INTEGER},
      </if>
      <if test="createname != null" >
        #{createname,jdbcType=VARCHAR},
      </if>
      <if test="classif != null" >
        #{classif,jdbcType=INTEGER},
      </if>
      <if test="useful != null" >
        #{useful,jdbcType=INTEGER},
      </if>
      <if test="useless != null" >
        #{useless,jdbcType=INTEGER},
      </if>
      <if test="reserve1 != null" >
        #{reserve1,jdbcType=VARCHAR},
      </if>
      <if test="reserve2 != null" >
        #{reserve2,jdbcType=VARCHAR},
      </if>
      <if test="reserve3 != null" >
        #{reserve3,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.jobyuan.pojo.JobInterviewExample" resultType="java.lang.Integer" >
    select count(*) from job_interview
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update job_interview
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.image != null" >
        image = #{record.image,jdbcType=VARCHAR},
      </if>
      <if test="record.sign != null" >
        sign = #{record.sign,jdbcType=INTEGER},
      </if>
      <if test="record.level != null" >
        level = #{record.level,jdbcType=INTEGER},
      </if>
      <if test="record.createtime != null" >
        createtime = #{record.createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updatetime != null" >
        updatetime = #{record.updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.isClose != null" >
        is_close = #{record.isClose,jdbcType=INTEGER},
      </if>
      <if test="record.createname != null" >
        createname = #{record.createname,jdbcType=VARCHAR},
      </if>
      <if test="record.classif != null" >
        classif = #{record.classif,jdbcType=INTEGER},
      </if>
      <if test="record.useful != null" >
        useful = #{record.useful,jdbcType=INTEGER},
      </if>
      <if test="record.useless != null" >
        useless = #{record.useless,jdbcType=INTEGER},
      </if>
      <if test="record.reserve1 != null" >
        reserve1 = #{record.reserve1,jdbcType=VARCHAR},
      </if>
      <if test="record.reserve2 != null" >
        reserve2 = #{record.reserve2,jdbcType=VARCHAR},
      </if>
      <if test="record.reserve3 != null" >
        reserve3 = #{record.reserve3,jdbcType=VARCHAR},
      </if>
      <if test="record.content != null" >
        content = #{record.content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update job_interview
    set id = #{record.id,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      image = #{record.image,jdbcType=VARCHAR},
      sign = #{record.sign,jdbcType=INTEGER},
      level = #{record.level,jdbcType=INTEGER},
      createtime = #{record.createtime,jdbcType=TIMESTAMP},
      updatetime = #{record.updatetime,jdbcType=TIMESTAMP},
      is_close = #{record.isClose,jdbcType=INTEGER},
      createname = #{record.createname,jdbcType=VARCHAR},
      classif = #{record.classif,jdbcType=INTEGER},
      useful = #{record.useful,jdbcType=INTEGER},
      useless = #{record.useless,jdbcType=INTEGER},
      reserve1 = #{record.reserve1,jdbcType=VARCHAR},
      reserve2 = #{record.reserve2,jdbcType=VARCHAR},
      reserve3 = #{record.reserve3,jdbcType=VARCHAR},
      content = #{record.content,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update job_interview
    set id = #{record.id,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      image = #{record.image,jdbcType=VARCHAR},
      sign = #{record.sign,jdbcType=INTEGER},
      level = #{record.level,jdbcType=INTEGER},
      createtime = #{record.createtime,jdbcType=TIMESTAMP},
      updatetime = #{record.updatetime,jdbcType=TIMESTAMP},
      is_close = #{record.isClose,jdbcType=INTEGER},
      createname = #{record.createname,jdbcType=VARCHAR},
      classif = #{record.classif,jdbcType=INTEGER},
      useful = #{record.useful,jdbcType=INTEGER},
      useless = #{record.useless,jdbcType=INTEGER},
      reserve1 = #{record.reserve1,jdbcType=VARCHAR},
      reserve2 = #{record.reserve2,jdbcType=VARCHAR},
      reserve3 = #{record.reserve3,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.jobyuan.pojo.JobInterview" >
    update job_interview
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="image != null" >
        image = #{image,jdbcType=VARCHAR},
      </if>
      <if test="sign != null" >
        sign = #{sign,jdbcType=INTEGER},
      </if>
      <if test="level != null" >
        level = #{level,jdbcType=INTEGER},
      </if>
      <if test="createtime != null" >
        createtime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatetime != null" >
        updatetime = #{updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="isClose != null" >
        is_close = #{isClose,jdbcType=INTEGER},
      </if>
      <if test="createname != null" >
        createname = #{createname,jdbcType=VARCHAR},
      </if>
      <if test="classif != null" >
        classif = #{classif,jdbcType=INTEGER},
      </if>
      <if test="useful != null" >
        useful = #{useful,jdbcType=INTEGER},
      </if>
      <if test="useless != null" >
        useless = #{useless,jdbcType=INTEGER},
      </if>
      <if test="reserve1 != null" >
        reserve1 = #{reserve1,jdbcType=VARCHAR},
      </if>
      <if test="reserve2 != null" >
        reserve2 = #{reserve2,jdbcType=VARCHAR},
      </if>
      <if test="reserve3 != null" >
        reserve3 = #{reserve3,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.jobyuan.pojo.JobInterview" >
    update job_interview
    set name = #{name,jdbcType=VARCHAR},
      image = #{image,jdbcType=VARCHAR},
      sign = #{sign,jdbcType=INTEGER},
      level = #{level,jdbcType=INTEGER},
      createtime = #{createtime,jdbcType=TIMESTAMP},
      updatetime = #{updatetime,jdbcType=TIMESTAMP},
      is_close = #{isClose,jdbcType=INTEGER},
      createname = #{createname,jdbcType=VARCHAR},
      classif = #{classif,jdbcType=INTEGER},
      useful = #{useful,jdbcType=INTEGER},
      useless = #{useless,jdbcType=INTEGER},
      reserve1 = #{reserve1,jdbcType=VARCHAR},
      reserve2 = #{reserve2,jdbcType=VARCHAR},
      reserve3 = #{reserve3,jdbcType=VARCHAR},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jobyuan.pojo.JobInterview" >
    update job_interview
    set name = #{name,jdbcType=VARCHAR},
      image = #{image,jdbcType=VARCHAR},
      sign = #{sign,jdbcType=INTEGER},
      level = #{level,jdbcType=INTEGER},
      createtime = #{createtime,jdbcType=TIMESTAMP},
      updatetime = #{updatetime,jdbcType=TIMESTAMP},
      is_close = #{isClose,jdbcType=INTEGER},
      createname = #{createname,jdbcType=VARCHAR},
      classif = #{classif,jdbcType=INTEGER},
      useful = #{useful,jdbcType=INTEGER},
      useless = #{useless,jdbcType=INTEGER},
      reserve1 = #{reserve1,jdbcType=VARCHAR},
      reserve2 = #{reserve2,jdbcType=VARCHAR},
      reserve3 = #{reserve3,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>